const path = require('path');
const util = require('util');
const os = require('os');
const got = require('got');
const fs = require('fs-extra');

const fsReadFile = util.promisify(fs.readFile);

function collect(elmJson, elmVersion) {
  return Promise.all(
    Object.entries(elmJson.dependencies).map(
      async ([packageName, constraint]) => {
        const packageVersion = constraint.split(' ')[0];

        const docsJson = await readDocsJsonFromElmHome(
          elmVersion,
          packageName,
          packageVersion
        ).catch(() =>
          readDocsJsonFromPackagesWebsite(packageName, packageVersion)
        );

        return {
          packageName,
          version: packageVersion,
          docsJson
        };
      }
    )
  );
}

function readDocsJsonFromElmHome(elmVersion, packageName, packageVersion) {
  // Instructions on where to find the `docs.json` generated by the compiler
  // are found at https://package.elm-lang.org/packages/elm/project-metadata-utils/1.0.0/
  const elmRoot =
    process.env.ELM_HOME ||
    path.join(
      os.homedir(),
      os.platform() === 'win32' ? 'AppData/Roaming/elm' : '.elm'
    );
  const file = path.join(
    elmRoot,
    elmVersion,
    'packages',
    packageName,
    packageVersion,
    'docs.json'
  );
  return fsReadFile(file, 'utf-8');
}

async function readDocsJsonFromPackagesWebsite(packageName, packageVersion) {
  const response = await got(
    `https://package.elm-lang.org/packages/${packageName}/${packageVersion}/docs.json`
  );
  return response.body;
}

module.exports = {
  collect
};
